@page "/generate-employees"
@using System.IO
@using System.Globalization
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore
@using Employees.Data
@inject IDbContextFactory<EmployeeDataContext> DbContextFactory

<h3>Mitarbeiter generieren</h3>

<input type="number" @bind="numberOfEmployees" placeholder="Anzahl der Mitarbeiter" />
<button @onclick="GenerateEmployeeList">Generieren</button>

@if (employees != null)
{
    <ul>
        @foreach (var employee in employees)
        {
            <li>@employee</li>
        }
    </ul>
}

@code {
    private int numberOfEmployees;
    private List<string> employees;

    private async Task GenerateEmployeeList()
    {
        var names = await File.ReadAllLinesAsync("wwwroot/names.csv");
        var addresses = await File.ReadAllLinesAsync("wwwroot/addresses.csv");
        var random = new Random();
        employees = new List<string>();

        using var context = DbContextFactory.CreateDbContext();

        for (int i = 0; i < numberOfEmployees; i++)
        {
            var name = names[random.Next(names.Length)].Split(',');
            var address = addresses[random.Next(addresses.Length)].Split(',');

            var email = $"{name[0].ToLower()}.{name[1].ToLower()}@example.com";
            var department = "Sales"; // Beispielwert, kann angepasst werden
            var avatar = $"https://example.com/avatars/{random.Next(1, 100)}.png"; // Beispiel-Avatar-URL

            var employee = $"{name[0]} {name[1]}, {email}, {department}, {avatar}, {address[0]}, {address[1]}, {address[2]}";

            employees.Add(employee);
            await File.AppendAllTextAsync("wwwroot/employees.log", employee + Environment.NewLine);
            await AddEmployeeToDatabase(context, name[0], name[1], email, department, avatar, address[0], address[1], address[2]);
        }
    }

    private async Task AddEmployeeToDatabase(EmployeeDataContext context, string firstName, string lastName, string email, string department, string avatar, string street, string city, string postalCode)
    {
        var employee = new Employee
            {
                FirstName = firstName,
                LastName = lastName,
                Email = email,
                Department = department,
                Avatar = avatar,
            };

        context.Employees.Add(employee);
        await context.SaveChangesAsync();
    }
}